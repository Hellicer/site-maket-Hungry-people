{"version":3,"sources":["libs/map.js","libs/for-anchor.js","libs/drop-menu.js","libs/chief-slider.js","libs/tablist.js","libs/valid-form.js","index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnphBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA","file":"../js/build.js","sourcesContent":["console.log('maps is fine');\nfunction myMap() {\n    var mapCanvas = document.getElementById(\"map\");\n    var mapOptions = {\n        center: new google.maps.LatLng(51.5, -0.2),\n        zoom: 10\n    };\n    var map = new google.maps.Map(mapCanvas, mapOptions);\n}","console.log('forAnchor is fine!');\n\n","console.log('drop-menu is work');\n\n// window.addEventListener(\"resize\", function() {\n//   if (window.matchMedia(\"(max-width: 700px)\").matches) {\n//     document.querySelectorAll('.header__dropdown').forEach((el) => {\n//       el.classList.remove(\"header__dropdown\")\n//       el.classList.add(\"mpIt\", \"mpId22\")\n//     })\n//   } else {\n//     document.querySelectorAll('.header__dropdown').forEach((el) => {\n//       el.classList.remove(\"header__dropdown\")\n//       el.classList.add(\"mpIt\", \"mpId21\")\n//     })\n//   } return\n// },);\n\n\nfunction myFunction() {\n  document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n}\n// Close the dropdown menu if the user clicks outside of it\nwindow.onclick = function(event) {\nif (!event.target.matches('.dropbtn')) {\n\n  var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n  var i;\n  for (i = 0; i < dropdowns.length; i++) {\n    var openDropdown = dropdowns[i];\n    if (openDropdown.classList.contains('show')) {\n      openDropdown.classList.remove('show');\n    }\n  }\n}\n}\n\n","/**\n * ChiefSlider by Itchief v2.0.0 (https://github.com/itchief/ui-components/tree/master/simple-adaptive-slider)\n * Copyright 2020 - 2021 Alexander Maltsev\n * Licensed under MIT (https://github.com/itchief/ui-components/blob/master/LICENSE)\n */\n\n\n console.log('chief-slider is fine');\n document.addEventListener('DOMContentLoaded', function() {\n  var elms = document.querySelectorAll('.slider');\n  for (var i = 0, len = elms.length; i < len; i++) {\n    // инициализация elms[i] в качестве слайдера\n    new ChiefSlider(elms[i]);\n  }\n});\n\n\n(function() {\n  if (typeof window.CustomEvent === 'function' ) return false;\n  function CustomEvent(event, params) {\n    params = params || {bubbles: false, cancelable: false, detail: null};\n    var e = document.createEvent('CustomEvent');\n    e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return e;\n  }\n  window.CustomEvent = CustomEvent;\n})();\n\nvar WRAPPER_SELECTOR = '.slider__wrapper';\nvar ITEMS_SELECTOR = '.slider__items';\nvar ITEM_SELECTOR = '.slider__item';\nvar CONTROL_CLASS = 'slider__control';\n\n/* var ITEM_CLASS_ACTIVE = 'slider__item_active';\nvar CONTROL_SELECTOR = '.slider__control';\nvar CONTROL_CLASS_SHOW = 'slider__control_show';\n// индикаторы\nvar INDICATOR_WRAPPER_ELEMENT = 'ol';\nvar INDICATOR_WRAPPER_CLASS = 'slider__indicators';\nvar INDICATOR_ITEM_ELEMENT = 'li';\nvar INDICATOR_ITEM_CLASS = 'slider__indicator';\nvar INDICATOR_ITEM_CLASS_ACTIVE = 'slider__indicator_active';\n// порог для переключения слайда (40%)\nvar POS_THRESHOLD = 40;\n// класс для отключения transition\nvar TRANSITION_NONE = 'transition-none';*/\n\nvar SELECTOR_PREV = '.slider__control[data-slide=\"prev\"]';\nvar SELECTOR_NEXT = '.slider__control[data-slide=\"next\"]';\nvar SELECTOR_INDICATOR = '.slider__indicators>li';\nvar SLIDER_TRANSITION_OFF = 'slider_disable-transition';\nvar CLASS_CONTROL_HIDE = 'slider__control_hide';\nvar CLASS_ITEM_ACTIVE = 'slider__item_active';\nvar CLASS_INDICATOR_ACTIVE = 'active';\n\nfunction ChiefSlider(selector, config) {\n  // элементы слайдера\n  var $root = typeof selector === 'string' ?\n    document.querySelector(selector) : selector;\n  this._$root = $root;\n  this._$wrapper = $root.querySelector(WRAPPER_SELECTOR);\n  this._$items = $root.querySelector(ITEMS_SELECTOR);\n  this._$itemList = $root.querySelectorAll(ITEM_SELECTOR);\n  this._$controlPrev = $root.querySelector(SELECTOR_PREV);\n  this._$controlNext = $root.querySelector(SELECTOR_NEXT);\n  this._$indicatorList = $root.querySelectorAll(SELECTOR_INDICATOR);\n  // экстремальные значения слайдов\n  this._minOrder = 0;\n  this._maxOrder = 0;\n  this._$itemWithMinOrder = null;\n  this._$itemWithMaxOrder = null;\n  this._minTranslate = 0;\n  this._maxTranslate = 0;\n  // направление смены слайдов (по умолчанию)\n  this._direction = 'next';\n  // determines whether the position of item needs to be determined\n  this._balancingItemsFlag = false;\n  this._activeItems = [];\n  // текущее значение трансформации\n  this._transform = 0;\n  // swipe параметры\n  this._hasSwipeState = false;\n  this.__swipeStartPos = 0;\n  // slider properties\n  this._transform = 0; // текущее значение трансформации\n  this._intervalId = null;\n  // configuration of the slider\n  this._config = {\n    loop: true,\n    autoplay: false,\n    interval: 5000,\n    refresh: true,\n    swipe: true,\n  };\n  for (var key in config) {\n    if (this._config.hasOwnProperty(key)) {\n      this._config[key] = config[key];\n    }\n  }\n  // create some constants\n  var $itemList = this._$itemList;\n  var widthItem = $itemList[0].offsetWidth;\n  var widthWrapper = this._$wrapper.offsetWidth;\n  var itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n  // initial setting properties\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transformStep = 100 / itemsInVisibleArea;\n  // initial setting order and translate items\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    $itemList[i].dataset.index = i;\n    $itemList[i].dataset.order = i;\n    $itemList[i].dataset.translate = 0;\n    if (i < itemsInVisibleArea) {\n      this._activeItems.push(i);\n    }\n  }\n  if (this._config.loop) {\n    // перемещаем последний слайд перед первым\n    var count = $itemList.length - 1;\n    var translate = -$itemList.length * 100;\n    $itemList[count].dataset.order = -1;\n    $itemList[count].dataset.translate = -$itemList.length * 100;\n    $itemList[count].style.transform = 'translateX(' + translate + '%)';\n    this.__refreshExtremeValues();\n  } else {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n  }\n  this._setActiveClass();\n  this._addEventListener();\n  this._updateIndicators();\n  this._autoplay();\n}\n\n// подключения обработчиков событий для слайдера\nChiefSlider.prototype._addEventListener = function() {\n  var $root = this._$root;\n  var $items = this._$items;\n  var config = this._config;\n  function onClick(e) {\n    var $target = e.target;\n    this._autoplay('stop');\n    if ($target.classList.contains(CONTROL_CLASS)) {\n      e.preventDefault();\n      this._direction = $target.dataset.slide;\n      this._move();\n    } else if ($target.dataset.slideTo) {\n      var index = parseInt($target.dataset.slideTo);\n      this._moveTo(index);\n    }\n    if (this._config.loop) {\n      this._autoplay();\n    }\n  }\n  function onMouseEnter(e) {\n    this._autoplay('stop');\n  }\n  function onMouseLeave(e) {\n    this._autoplay();\n  }\n  function onTransitionStart() {\n    if (this._balancingItemsFlag) {\n      return;\n    }\n    this._balancingItemsFlag = true;\n    window.requestAnimationFrame(this._balancingItems.bind(this));\n  }\n  function onTransitionEnd() {\n    this._balancingItemsFlag = false;\n  }\n  function onResize() {\n    window.requestAnimationFrame(this._refresh.bind(this));\n  }\n  function onSwipeStart(e) {\n    this._autoplay('stop');\n    var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n    this._swipeStartPos = event.clientX;\n    this._hasSwipeState = true;\n  }\n  function onSwipeEnd(e) {\n    if (!this._hasSwipeState) {\n      return;\n    }\n    var event = e.type.search('touch') === 0 ? e.changedTouches[0] : e;\n    var diffPos = this._swipeStartPos - event.clientX;\n    if (diffPos > 50) {\n      this._direction = 'next';\n      this._move();\n    } else if (diffPos < -50) {\n      this._direction = 'prev';\n      this._move();\n    }\n    this._hasSwipeState = false;\n    if (this._config.loop) {\n      this._autoplay();\n    }\n  }\n  function onDragStart(e) {\n    e.preventDefault();\n  }\n  function onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      this._autoplay('stop');\n    } else if (document.visibilityState === 'visible') {\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n  }\n\n  $root.addEventListener('click', onClick.bind(this));\n  $root.addEventListener('mouseenter', onMouseEnter.bind(this));\n  $root.addEventListener('mouseleave', onMouseLeave.bind(this));\n  // on resize\n  if (config.refresh) {\n    window.addEventListener('resize', onResize.bind(this));\n  }\n  // on transitionstart and transitionend\n  if (config.loop) {\n    $items.addEventListener('transition-start', onTransitionStart.bind(this));\n    $items.addEventListener('transitionend', onTransitionEnd.bind(this));\n  }\n  // on touchstart and touchend\n  if (config.swipe) {\n    $root.addEventListener('touchstart', onSwipeStart.bind(this));\n    $root.addEventListener('mousedown', onSwipeStart.bind(this));\n    document.addEventListener('touchend', onSwipeEnd.bind(this));\n    document.addEventListener('mouseup', onSwipeEnd.bind(this));\n  }\n  $root.addEventListener('dragstart', onDragStart.bind(this));\n  // при изменении активности вкладки\n  document.addEventListener('visibilitychange', onVisibilityChange.bind(this));\n};\n\n// update values of extreme properties\nChiefSlider.prototype.__refreshExtremeValues = function() {\n  var $itemList = this._$itemList;\n  this._minOrder = +$itemList[0].dataset.order;\n  this._maxOrder = this._minOrder;\n  this._$itemByMinOrder = $itemList[0];\n  this._$itemByMaxOrder = $itemList[0];\n  this._minTranslate = +$itemList[0].dataset.translate;\n  this._maxTranslate = this._minTranslate;\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    var $item = $itemList[i];\n    var order = +$item.dataset.order;\n    if (order < this._minOrder) {\n      this._minOrder = order;\n      this._$itemByMinOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    } else if (order > this._maxOrder) {\n      this._maxOrder = order;\n      this._$itemByMaxOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    }\n  }\n};\n\n// update position of item\nChiefSlider.prototype._balancingItems = function() {\n  if (!this._balancingItemsFlag) {\n    return;\n  }\n  var $wrapper = this._$wrapper;\n  var $wrapperClientRect = $wrapper.getBoundingClientRect();\n  var widthHalfItem = $wrapperClientRect.width / this._itemsInVisibleArea / 2;\n  var count = this._$itemList.length;\n  var translate;\n  var clientRect;\n  if (this._direction === 'next') {\n    var wrapperLeft = $wrapperClientRect.left;\n    var $min = this._$itemByMinOrder;\n    translate = this._minTranslate;\n    clientRect = $min.getBoundingClientRect();\n    if (clientRect.right < wrapperLeft - widthHalfItem) {\n      $min.dataset.order = this._minOrder + count;\n      translate += count * 100;\n      $min.dataset.translate = translate;\n      $min.style.transform = 'translateX('.concat(translate, '%)');\n      // update values of extreme properties\n      this.__refreshExtremeValues();\n    }\n  } else {\n    var wrapperRight = $wrapperClientRect.right;\n    var $max = this._$itemByMaxOrder;\n    translate = this._maxTranslate;\n    clientRect = $max.getBoundingClientRect();\n    if (clientRect.left > wrapperRight + widthHalfItem) {\n      $max.dataset.order = this._maxOrder - count;\n      translate -= count * 100;\n      $max.dataset.translate = translate;\n      $max.style.transform = 'translateX('.concat(translate, '%)');\n      // update values of extreme properties\n      this.__refreshExtremeValues();\n    }\n  }\n  // updating...\n  requestAnimationFrame(this._balancingItems.bind(this));\n};\n\n// _setActiveClass\nChiefSlider.prototype._setActiveClass = function() {\n  var activeItems = this._activeItems;\n  var $itemList = this._$itemList;\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    var $item = $itemList[i];\n    var index = +$item.dataset.index;\n    if (activeItems.indexOf(index) > -1) {\n      $item.classList.add(CLASS_ITEM_ACTIVE);\n    } else {\n      $item.classList.remove(CLASS_ITEM_ACTIVE);\n    }\n  }\n};\n\n// _updateIndicators\nChiefSlider.prototype._updateIndicators = function() {\n  var $indicatorList = this._$indicatorList;\n  var $itemList = this._$itemList;\n  if (!$indicatorList.length) {\n    return;\n  }\n  for (var index = 0, length = $itemList.length; index < length; index++) {\n    var $item = $itemList[index];\n    if ($item.classList.contains(CLASS_ITEM_ACTIVE)) {\n      $indicatorList[index].classList.add(CLASS_INDICATOR_ACTIVE);\n    } else {\n      $indicatorList[index].classList.remove(CLASS_INDICATOR_ACTIVE);\n    }\n  }\n};\n\n// move slides\nChiefSlider.prototype._move = function() {\n  var step = this._direction ===\n   'next' ? -this._transformStep : this._transformStep;\n  var transform = this._transform + step;\n  if (!this._config.loop) {\n    var endTransformValue =\n      this._transformStep * (this._$itemList.length - this._itemsInVisibleArea);\n    transform = Math.round(transform * 10) / 10;\n    if (transform < -endTransformValue || transform > 0) {\n      return;\n    }\n    this._$controlPrev.classList.remove(CLASS_CONTROL_HIDE);\n    this._$controlNext.classList.remove(CLASS_CONTROL_HIDE);\n    if (transform === -endTransformValue) {\n      this._$controlNext.classList.add(CLASS_CONTROL_HIDE);\n    } else if (transform === 0) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n  }\n  var activeIndex = [];\n  var i = 0;\n  var length;\n  var index;\n  var newIndex;\n  if (this._direction === 'next') {\n    for (i = 0, length = this._activeItems.length; i < length; i++) {\n      index = this._activeItems[i];\n      newIndex = ++index;\n      if (newIndex > this._$itemList.length - 1) {\n        newIndex -= this._$itemList.length;\n      }\n      activeIndex.push(newIndex);\n    }\n  } else {\n    for (i = 0, length = this._activeItems.length; i < length; i++) {\n      index = this._activeItems[i];\n      newIndex = --index;\n      if (newIndex < 0) {\n        newIndex += this._$itemList.length;\n      }\n      activeIndex.push(newIndex);\n    }\n  }\n  this._activeItems = activeIndex;\n  this._setActiveClass();\n  this._updateIndicators();\n  this._transform = transform;\n  this._$items.style.transform = 'translateX(' + transform + '%)';\n  this._$items.dispatchEvent(new CustomEvent('transition-start', {bubbles: true}));\n};\n\n// _moveToNext\nChiefSlider.prototype._moveToNext = function() {\n  this._direction = 'next';\n  this._move();\n};\n\n// _moveToPrev\nChiefSlider.prototype._moveToPrev = function() {\n  this._direction = 'prev';\n  this._move();\n};\n\n// _moveTo\nChiefSlider.prototype._moveTo = function(index) {\n  var $indicatorList = this._$indicatorList;\n  var nearestIndex = null;\n  var diff = null;\n  var i;\n  var length;\n  for (i = 0, length = $indicatorList.length; i < length; i++) {\n    var $indicator = $indicatorList[i];\n    if ($indicator.classList.contains(CLASS_INDICATOR_ACTIVE)) {\n      var slideTo = +$indicator.dataset.slideTo;\n      if (diff === null) {\n        nearestIndex = slideTo;\n        diff = Math.abs(index - nearestIndex);\n      } else {\n        if (Math.abs(index - slideTo) < diff) {\n          nearestIndex = slideTo;\n          diff = Math.abs(index - nearestIndex);\n        }\n      }\n    }\n  }\n  diff = index - nearestIndex;\n  if (diff === 0) {\n    return;\n  }\n  this._direction = diff > 0 ? 'next' : 'prev';\n  for (i = 1; i <= Math.abs(diff); i++) {\n    this._move();\n  }\n};\n\n// _autoplay\nChiefSlider.prototype._autoplay = function(action) {\n  if (!this._config.autoplay) {\n    return;\n  }\n  if (action === 'stop') {\n    clearInterval(this._intervalId);\n    this._intervalId = null;\n    return;\n  }\n  if (this._intervalId === null) {\n    this._intervalId = setInterval(\n        function() {\n          this._direction = 'next';\n          this._move();\n        }.bind(this),\n        this._config.interval\n    );\n  }\n};\n\n// _refresh\nChiefSlider.prototype._refresh = function() {\n  // create some constants\n  var $itemList = this._$itemList;\n  var widthItem = $itemList[0].offsetWidth;\n  var widthWrapper = this._$wrapper.offsetWidth;\n  var itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n\n  if (itemsInVisibleArea === this._itemsInVisibleArea) {\n    return;\n  }\n\n  this._autoplay('stop');\n\n  this._$items.classList.add(SLIDER_TRANSITION_OFF);\n  this._$items.style.transform = 'translateX(0)';\n\n  // setting properties after reset\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transform = 0;\n  this._transformStep = 100 / itemsInVisibleArea;\n  this._balancingItemsFlag = false;\n  this._activeItems = [];\n\n  // setting order and translate items after reset\n  for (var i = 0, length = $itemList.length; i < length; i++) {\n    var $item = $itemList[i];\n    var position = i;\n    $item.dataset.index = position;\n    $item.dataset.order = position;\n    $item.dataset.translate = 0;\n    $item.style.transform = 'translateX(0)';\n    if (position < itemsInVisibleArea) {\n      this._activeItems.push(position);\n    }\n  }\n\n  this._setActiveClass();\n  this._updateIndicators();\n  window.requestAnimationFrame(\n      function() {\n        this._$items.classList.remove(SLIDER_TRANSITION_OFF);\n      }.bind(this)\n  );\n\n  // hide prev arrow for non-infinite slider\n  if (!this._config.loop) {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n    return;\n  }\n\n  // translate last item before first\n  var count = $itemList.length - 1;\n  var translate = -$itemList.length * 100;\n  $itemList[count].dataset.order = -1;\n  $itemList[count].dataset.translate = -$itemList.length * 100;\n  $itemList[count].style.transform = 'translateX('.concat(translate, '%)');\n  // update values of extreme properties\n  this.__refreshExtremeValues();\n  // calling _autoplay\n  this._autoplay();\n};\n\n// public\nChiefSlider.prototype.next = function() {\n  this._moveToNext();\n};\nChiefSlider.prototype.prev = function() {\n  this._moveToPrev();\n};\nChiefSlider.prototype.moveTo = function(index) {\n  this._moveTo(index);\n};\nChiefSlider.prototype.refresh = function() {\n  this._refresh();\n};\n","console.log('tablist is fine');\nvar $tabs = function (target) {\n  var\n    _elemTabs = (typeof target === 'string' ? document.querySelector(target) : target),\n    _eventTabsShow,\n    _showTab = function (tabsLinkTarget) {\n      var tabsPaneTarget, tabsLinkActive, tabsPaneShow;\n      tabsPaneTarget = document.querySelector(tabsLinkTarget.getAttribute('href'));\n      tabsLinkActive = tabsLinkTarget.parentElement.querySelector('.tabs__link_active');\n      tabsPaneShow = tabsPaneTarget.parentElement.querySelector('.tabs__pane_show');\n      // если следующая вкладка равна активной, то завершаем работу\n      if (tabsLinkTarget === tabsLinkActive) {\n        return;\n      }\n      // удаляем классы у текущих активных элементов\n      if (tabsLinkActive !== null) {\n        tabsLinkActive.classList.remove('tabs__link_active');\n      }\n      if (tabsPaneShow !== null) {\n        tabsPaneShow.classList.remove('tabs__pane_show');\n      }\n      // добавляем классы к элементам (в завимости от выбранной вкладки)\n      tabsLinkTarget.classList.add('tabs__link_active');\n      tabsPaneTarget.classList.add('tabs__pane_show');\n      document.dispatchEvent(_eventTabsShow);\n    },\n    _switchTabTo = function (tabsLinkIndex) {\n      var tabsLinks = _elemTabs.querySelectorAll('.tabs__link');\n      if (tabsLinks.length > 0) {\n        if (tabsLinkIndex > tabsLinks.length) {\n          tabsLinkIndex = tabsLinks.length;\n        } else if (tabsLinkIndex < 1) {\n          tabsLinkIndex = 1;\n        }\n        _showTab(tabsLinks[tabsLinkIndex - 1]);\n      }\n    };\n\n  _eventTabsShow = new CustomEvent('tab.show', { detail: _elemTabs });\n\n  _elemTabs.addEventListener('click', function (e) {\n    var tabsLinkTarget = e.target;\n    // завершаем выполнение функции, если кликнули не по ссылке\n    if (!tabsLinkTarget.classList.contains('tabs__link')) {\n      return;\n    }\n    // отменяем стандартное действие\n    e.preventDefault();\n    _showTab(tabsLinkTarget);\n  });\n\n  return {\n    showTab: function (target) {\n      _showTab(target);\n    },\n    switchTabTo: function (index) {\n      _switchTabTo(index);\n    }\n  }\n\n  };\n\n  $tabs('.tabs');","console.log('valid-form is work');\n\nvar element = document.getElementById('phone');\nvar maskOptions = {\n  mask: '+{38}(000)000-00-00'\n};\nvar mask = IMask(element, maskOptions);\n\n\n\nvar element = document.getElementById('phone2');\nvar maskOptions = {\n  mask: '+{38}(000)000-00-00'\n};\nvar mask = IMask(element, maskOptions);\n\n","//=require libs/map.js\n//=require libs/for-anchor.js\n//=require libs/drop-menu.js\n//=require libs/chief-slider.js\n//=require libs/tablist.js\n//=require libs/valid-form.js\n\n\n\n"]}